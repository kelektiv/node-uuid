#!/usr/bin/env node
var assert = require('assert');

function usage() {
  console.log('Usage:');
  console.log('  uuid');
  console.log('  uuid v1');
  console.log('  uuid v4');
  console.log('  uuid v5 [--encoding=<encoding>] <name> <namespace uuid>');
  console.log('      <encoding> Specifies the encoding of <name>, valid values (in node v8): ascii, utf8, utf16le, ucs2, base64, latin1, binary, hex');
  console.log('      <namespace uuid> Must either be a valid UUID or a shortcut for the 4 predefined UUIDs according to RFC4122: URL, DNS, OID, X500');
  console.log('  uuid --help');
}

var args = process.argv.slice(2);

if (args.indexOf('--help') >= 0) {
  usage();
  process.exit(0);
}
var version = args.shift() || 'v4';

switch (version) {
  case 'v1':
    var uuidV1 = require('../v1');
    console.log(uuidV1());
    break;

  case 'v4':
    var uuidV4 = require('../v4');
    console.log(uuidV4());
    break;

  case 'v5':
    var uuidV5 = require('../v5');

    var name = args.shift();
    if (args.length == 2 && /^--encoding=([a-z0-9]+)$/.test(name)){
      var newBuffer = (typeof Buffer.from === 'function' ? function(val,format){ return Buffer.from(val,format); } : function(val,format){ return new Buffer(val,format); });
      var format = name.match(/^--encoding=([a-z0-9]+)$/)[1];
      name = newBuffer(args.shift(), format);
    }
    var namespace = args.shift();
    assert(name != null, 'v5 name not specified');
    assert(namespace != null, 'v5 namespace not specified');

    if (namespace == 'URL') namespace = uuidV5.URL;
    if (namespace == 'DNS') namespace = uuidV5.DNS;
    if (namespace == 'OID') namespace = uuidV5.OID;
    if (namespace == 'X500') namespace = uuidV5.X500;

    console.log(uuidV5(name, namespace));
    break;

  default:
    usage();
    process.exit(1);
}
